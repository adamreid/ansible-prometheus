---
# file: tasks/install-alertmanager.yml
#
# Install Prometheus alertmanager.
#
# @see http://prometheus.io/docs/introduction/getting_started/
#
- name: set internal variables for convenience, part 1
  set_fact:
    prometheus_alertmanager_signature: "alertmanager-{{ prometheus_alertmanager_version }}.{{ prometheus_platform_suffix }}"


- name: set internal variables for convenience, part 2
  set_fact:
    prometheus_alertmanager_untar_path: "{{ prometheus_install_path }}"
    prometheus_alertmanager_tarball_path: "/tmp/{{ prometheus_alertmanager_signature }}.tar.gz"
    prometheus_alertmanager_daemon_dir: "{{ prometheus_install_path }}/{{ prometheus_alertmanager_signature }}"


- name: set download url for versions >= 0.3.0
  set_fact:
    prometheus_alertmanager_tarball_url: "https://github.com/prometheus/alertmanager/releases/download/v{{ prometheus_alertmanager_version }}/{{ prometheus_alertmanager_signature }}.tar.gz"
  when: prometheus_alertmanager_version | version_compare('0.3', '>=')

- name: set download url for versions < 0.3.0 (OBSOLETE!)
  set_fact:
    prometheus_alertmanager_tarball_url: "https://github.com/prometheus/alertmanager/releases/download/{{ prometheus_alertmanager_version }}/{{ prometheus_alertmanager_signature }}.tar.gz"
  when: prometheus_alertmanager_version | version_compare('0.3', '<')


- name: download alertmanager tarball
  get_url:
    url: "{{ prometheus_alertmanager_tarball_url }}"
    dest: "{{ prometheus_alertmanager_tarball_path }}"

- name: uncompress alertmanager tarball
  unarchive:
    src: "{{ prometheus_alertmanager_tarball_path }}"
    dest: "{{ prometheus_alertmanager_untar_path }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "go-w"
    remote_src: yes
    copy: no

- name: mkdir for alertmanager data (silences.json for now)
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "u=rwx,g=rx,o="
  with_items:
    - "{{ prometheus_alertmanager_db_path }}"

- name: set alertmanager variables
  copy: src="../files/etc-default-alertmanager"  dest=/etc/default/alertmanager

- name: copy INIT script to server
  template: src="../templates/alertmanager.sysvinit.{{ ansible_os_family|lower }}.sh.j2"  dest="/etc/init.d/alertmanager"  mode="a+x"

- name: set INIT status
  service: name=alertmanager enabled=yes

#- name: set INIT status and start
#  service: name=alertmanager state=started
#  when: prometheus_use_service|bool

- name: install alertmanager config file from playbook's, if any
  template: src="{{ playbook_dir }}/{{ prometheus_alertmanager_conf }}"  dest="{{ prometheus_config_path }}/alertmanager.yml"
  when: prometheus_alertmanager_conf is defined
  notify:
    - restart alertmanager

- name: install default (empty) alertmanager config file, if necessary
  copy: src="../files/alertmanager.empty.yml"  dest="{{ prometheus_config_path }}/alertmanager.yml"
  when: prometheus_alertmanager_conf is not defined
  notify:
    - restart alertmanager
